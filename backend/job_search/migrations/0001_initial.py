# Generated by Django 5.1.3 on 2024-11-26 21:37

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField()),
                ('user_greeting', models.CharField(max_length=24)),
                ('color_mode', models.CharField(max_length=24)),
                ('dashboard_first_date', models.DateTimeField(blank=True, null=True)),
                ('dashboard_second_date', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=128)),
                ('opportunity_status', models.CharField(max_length=48)),
                ('recruiter_name', models.CharField(max_length=64)),
                ('recruiter_company', models.CharField(max_length=64)),
                ('email_received_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('employment_type', models.CharField(default='', max_length=24)),
                ('job_duration', models.CharField(default='', max_length=64)),
                ('location_type', models.CharField(default='', max_length=32)),
                ('location_city', models.CharField(default='', max_length=64)),
                ('comments', models.JSONField(blank=True, default=list, null=True)),
                ('job_description', models.TextField(blank=True, default='', null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='', max_length=64)),
                ('site_url', models.CharField(default='', max_length=2048)),
                ('site_password', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('rating', models.IntegerField(default=1)),
                ('resume_format', models.CharField(default='', max_length=32)),
                ('github_field', models.BooleanField(default=False)),
                ('project_site_field', models.BooleanField(default=False)),
                ('last_visited_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('resume_updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('headline', models.CharField(default='', max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='', max_length=128)),
                ('posting_title', models.CharField(default='', max_length=128)),
                ('posting_status', models.CharField(default='', max_length=32)),
                ('posting_url_full', models.CharField(default='', max_length=2048)),
                ('posting_url_domain', models.CharField(default='', max_length=32)),
                ('posting_password', models.CharField(blank=True, default='', max_length=32, null=True)),
                ('pay_range', models.CharField(default='', max_length=256)),
                ('location_type', models.CharField(default='', max_length=32)),
                ('location_city', models.CharField(default='', max_length=64)),
                ('employment_type', models.CharField(default='', max_length=32)),
                ('applied_at', models.DateTimeField(default=datetime.datetime.now)),
                ('interviewed_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_after_stage', models.CharField(default='', max_length=32)),
                ('job_scan_info', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('outreach_info', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('time_spent', models.IntegerField(blank=True, default='', null=True)),
                ('technology_string', models.CharField(blank=True, default='', max_length=512)),
                ('technology_stack', models.JSONField(blank=True, default=list, null=True)),
                ('comments', models.JSONField(blank=True, default=list, null=True)),
                ('posting_application_questions', models.JSONField(blank=True, default=list, null=True)),
                ('job_description', models.TextField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job_site_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job_search.jobsite')),
            ],
        ),
    ]
